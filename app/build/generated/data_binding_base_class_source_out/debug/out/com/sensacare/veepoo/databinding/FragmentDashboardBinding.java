// Generated by view binder compiler. Do not edit!
package com.sensacare.veepoo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.BarChart;
import com.github.mikephil.charting.charts.LineChart;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.sensacare.veepoo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton adminButton;

  @NonNull
  public final MaterialCardView bloodPressureCard;

  @NonNull
  public final BarChart bloodPressureChart;

  @NonNull
  public final TextView bloodPressureValue;

  @NonNull
  public final MaterialButton connectionActionButton;

  @NonNull
  public final MaterialCardView connectionStatusBanner;

  @NonNull
  public final ImageView connectionStatusIcon;

  @NonNull
  public final TextView connectionStatusText;

  @NonNull
  public final MaterialButton consentButton;

  @NonNull
  public final MaterialButton diagnosticButton;

  @NonNull
  public final FloatingActionButton fabQuickAction;

  @NonNull
  public final MaterialCardView heartRateCard;

  @NonNull
  public final LineChart heartRateChart;

  @NonNull
  public final ImageView heartRateTrend;

  @NonNull
  public final TextView heartRateTrendText;

  @NonNull
  public final TextView heartRateValue;

  @NonNull
  public final MaterialCardView overallAlertContainer;

  @NonNull
  public final ImageView overallAlertIcon;

  @NonNull
  public final TextView overallAlertText;

  @NonNull
  public final TextView rpmAlertText;

  @NonNull
  public final MaterialCardView rpmAlertsContainer;

  @NonNull
  public final MaterialButton rpmSetupButton;

  @NonNull
  public final TextView rpmStatusText;

  @NonNull
  public final TextView serviceStatusText;

  @NonNull
  public final MaterialCardView spo2Card;

  @NonNull
  public final LineChart spo2Chart;

  @NonNull
  public final TextView spo2Value;

  @NonNull
  public final MaterialButton startServiceButton;

  @NonNull
  public final MaterialButton stopServiceButton;

  @NonNull
  public final MaterialCardView temperatureCard;

  @NonNull
  public final LineChart temperatureChart;

  @NonNull
  public final TextView temperatureValue;

  @NonNull
  public final MaterialButton timelineButton;

  @NonNull
  public final TextView vitalsStatusText;

  private FragmentDashboardBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton adminButton, @NonNull MaterialCardView bloodPressureCard,
      @NonNull BarChart bloodPressureChart, @NonNull TextView bloodPressureValue,
      @NonNull MaterialButton connectionActionButton,
      @NonNull MaterialCardView connectionStatusBanner, @NonNull ImageView connectionStatusIcon,
      @NonNull TextView connectionStatusText, @NonNull MaterialButton consentButton,
      @NonNull MaterialButton diagnosticButton, @NonNull FloatingActionButton fabQuickAction,
      @NonNull MaterialCardView heartRateCard, @NonNull LineChart heartRateChart,
      @NonNull ImageView heartRateTrend, @NonNull TextView heartRateTrendText,
      @NonNull TextView heartRateValue, @NonNull MaterialCardView overallAlertContainer,
      @NonNull ImageView overallAlertIcon, @NonNull TextView overallAlertText,
      @NonNull TextView rpmAlertText, @NonNull MaterialCardView rpmAlertsContainer,
      @NonNull MaterialButton rpmSetupButton, @NonNull TextView rpmStatusText,
      @NonNull TextView serviceStatusText, @NonNull MaterialCardView spo2Card,
      @NonNull LineChart spo2Chart, @NonNull TextView spo2Value,
      @NonNull MaterialButton startServiceButton, @NonNull MaterialButton stopServiceButton,
      @NonNull MaterialCardView temperatureCard, @NonNull LineChart temperatureChart,
      @NonNull TextView temperatureValue, @NonNull MaterialButton timelineButton,
      @NonNull TextView vitalsStatusText) {
    this.rootView = rootView;
    this.adminButton = adminButton;
    this.bloodPressureCard = bloodPressureCard;
    this.bloodPressureChart = bloodPressureChart;
    this.bloodPressureValue = bloodPressureValue;
    this.connectionActionButton = connectionActionButton;
    this.connectionStatusBanner = connectionStatusBanner;
    this.connectionStatusIcon = connectionStatusIcon;
    this.connectionStatusText = connectionStatusText;
    this.consentButton = consentButton;
    this.diagnosticButton = diagnosticButton;
    this.fabQuickAction = fabQuickAction;
    this.heartRateCard = heartRateCard;
    this.heartRateChart = heartRateChart;
    this.heartRateTrend = heartRateTrend;
    this.heartRateTrendText = heartRateTrendText;
    this.heartRateValue = heartRateValue;
    this.overallAlertContainer = overallAlertContainer;
    this.overallAlertIcon = overallAlertIcon;
    this.overallAlertText = overallAlertText;
    this.rpmAlertText = rpmAlertText;
    this.rpmAlertsContainer = rpmAlertsContainer;
    this.rpmSetupButton = rpmSetupButton;
    this.rpmStatusText = rpmStatusText;
    this.serviceStatusText = serviceStatusText;
    this.spo2Card = spo2Card;
    this.spo2Chart = spo2Chart;
    this.spo2Value = spo2Value;
    this.startServiceButton = startServiceButton;
    this.stopServiceButton = stopServiceButton;
    this.temperatureCard = temperatureCard;
    this.temperatureChart = temperatureChart;
    this.temperatureValue = temperatureValue;
    this.timelineButton = timelineButton;
    this.vitalsStatusText = vitalsStatusText;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adminButton;
      MaterialButton adminButton = ViewBindings.findChildViewById(rootView, id);
      if (adminButton == null) {
        break missingId;
      }

      id = R.id.bloodPressureCard;
      MaterialCardView bloodPressureCard = ViewBindings.findChildViewById(rootView, id);
      if (bloodPressureCard == null) {
        break missingId;
      }

      id = R.id.bloodPressureChart;
      BarChart bloodPressureChart = ViewBindings.findChildViewById(rootView, id);
      if (bloodPressureChart == null) {
        break missingId;
      }

      id = R.id.bloodPressureValue;
      TextView bloodPressureValue = ViewBindings.findChildViewById(rootView, id);
      if (bloodPressureValue == null) {
        break missingId;
      }

      id = R.id.connectionActionButton;
      MaterialButton connectionActionButton = ViewBindings.findChildViewById(rootView, id);
      if (connectionActionButton == null) {
        break missingId;
      }

      id = R.id.connectionStatusBanner;
      MaterialCardView connectionStatusBanner = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatusBanner == null) {
        break missingId;
      }

      id = R.id.connectionStatusIcon;
      ImageView connectionStatusIcon = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatusIcon == null) {
        break missingId;
      }

      id = R.id.connectionStatusText;
      TextView connectionStatusText = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatusText == null) {
        break missingId;
      }

      id = R.id.consentButton;
      MaterialButton consentButton = ViewBindings.findChildViewById(rootView, id);
      if (consentButton == null) {
        break missingId;
      }

      id = R.id.diagnosticButton;
      MaterialButton diagnosticButton = ViewBindings.findChildViewById(rootView, id);
      if (diagnosticButton == null) {
        break missingId;
      }

      id = R.id.fabQuickAction;
      FloatingActionButton fabQuickAction = ViewBindings.findChildViewById(rootView, id);
      if (fabQuickAction == null) {
        break missingId;
      }

      id = R.id.heartRateCard;
      MaterialCardView heartRateCard = ViewBindings.findChildViewById(rootView, id);
      if (heartRateCard == null) {
        break missingId;
      }

      id = R.id.heartRateChart;
      LineChart heartRateChart = ViewBindings.findChildViewById(rootView, id);
      if (heartRateChart == null) {
        break missingId;
      }

      id = R.id.heartRateTrend;
      ImageView heartRateTrend = ViewBindings.findChildViewById(rootView, id);
      if (heartRateTrend == null) {
        break missingId;
      }

      id = R.id.heartRateTrendText;
      TextView heartRateTrendText = ViewBindings.findChildViewById(rootView, id);
      if (heartRateTrendText == null) {
        break missingId;
      }

      id = R.id.heartRateValue;
      TextView heartRateValue = ViewBindings.findChildViewById(rootView, id);
      if (heartRateValue == null) {
        break missingId;
      }

      id = R.id.overallAlertContainer;
      MaterialCardView overallAlertContainer = ViewBindings.findChildViewById(rootView, id);
      if (overallAlertContainer == null) {
        break missingId;
      }

      id = R.id.overallAlertIcon;
      ImageView overallAlertIcon = ViewBindings.findChildViewById(rootView, id);
      if (overallAlertIcon == null) {
        break missingId;
      }

      id = R.id.overallAlertText;
      TextView overallAlertText = ViewBindings.findChildViewById(rootView, id);
      if (overallAlertText == null) {
        break missingId;
      }

      id = R.id.rpmAlertText;
      TextView rpmAlertText = ViewBindings.findChildViewById(rootView, id);
      if (rpmAlertText == null) {
        break missingId;
      }

      id = R.id.rpmAlertsContainer;
      MaterialCardView rpmAlertsContainer = ViewBindings.findChildViewById(rootView, id);
      if (rpmAlertsContainer == null) {
        break missingId;
      }

      id = R.id.rpmSetupButton;
      MaterialButton rpmSetupButton = ViewBindings.findChildViewById(rootView, id);
      if (rpmSetupButton == null) {
        break missingId;
      }

      id = R.id.rpmStatusText;
      TextView rpmStatusText = ViewBindings.findChildViewById(rootView, id);
      if (rpmStatusText == null) {
        break missingId;
      }

      id = R.id.serviceStatusText;
      TextView serviceStatusText = ViewBindings.findChildViewById(rootView, id);
      if (serviceStatusText == null) {
        break missingId;
      }

      id = R.id.spo2Card;
      MaterialCardView spo2Card = ViewBindings.findChildViewById(rootView, id);
      if (spo2Card == null) {
        break missingId;
      }

      id = R.id.spo2Chart;
      LineChart spo2Chart = ViewBindings.findChildViewById(rootView, id);
      if (spo2Chart == null) {
        break missingId;
      }

      id = R.id.spo2Value;
      TextView spo2Value = ViewBindings.findChildViewById(rootView, id);
      if (spo2Value == null) {
        break missingId;
      }

      id = R.id.startServiceButton;
      MaterialButton startServiceButton = ViewBindings.findChildViewById(rootView, id);
      if (startServiceButton == null) {
        break missingId;
      }

      id = R.id.stopServiceButton;
      MaterialButton stopServiceButton = ViewBindings.findChildViewById(rootView, id);
      if (stopServiceButton == null) {
        break missingId;
      }

      id = R.id.temperatureCard;
      MaterialCardView temperatureCard = ViewBindings.findChildViewById(rootView, id);
      if (temperatureCard == null) {
        break missingId;
      }

      id = R.id.temperatureChart;
      LineChart temperatureChart = ViewBindings.findChildViewById(rootView, id);
      if (temperatureChart == null) {
        break missingId;
      }

      id = R.id.temperatureValue;
      TextView temperatureValue = ViewBindings.findChildViewById(rootView, id);
      if (temperatureValue == null) {
        break missingId;
      }

      id = R.id.timelineButton;
      MaterialButton timelineButton = ViewBindings.findChildViewById(rootView, id);
      if (timelineButton == null) {
        break missingId;
      }

      id = R.id.vitalsStatusText;
      TextView vitalsStatusText = ViewBindings.findChildViewById(rootView, id);
      if (vitalsStatusText == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((CoordinatorLayout) rootView, adminButton,
          bloodPressureCard, bloodPressureChart, bloodPressureValue, connectionActionButton,
          connectionStatusBanner, connectionStatusIcon, connectionStatusText, consentButton,
          diagnosticButton, fabQuickAction, heartRateCard, heartRateChart, heartRateTrend,
          heartRateTrendText, heartRateValue, overallAlertContainer, overallAlertIcon,
          overallAlertText, rpmAlertText, rpmAlertsContainer, rpmSetupButton, rpmStatusText,
          serviceStatusText, spo2Card, spo2Chart, spo2Value, startServiceButton, stopServiceButton,
          temperatureCard, temperatureChart, temperatureValue, timelineButton, vitalsStatusText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
