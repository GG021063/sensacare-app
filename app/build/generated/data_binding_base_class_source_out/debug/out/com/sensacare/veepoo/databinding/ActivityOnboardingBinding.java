// Generated by view binder compiler. Do not edit!
package com.sensacare.veepoo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.sensacare.veepoo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOnboardingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button backButton;

  @NonNull
  public final LinearLayout buttonContainer;

  @NonNull
  public final Button nextButton;

  @NonNull
  public final LinearLayout progressContainer;

  @NonNull
  public final LinearProgressIndicator progressIndicator;

  @NonNull
  public final Button skipButton;

  @NonNull
  public final TextView stepCounter;

  @NonNull
  public final TextView stepDescription;

  @NonNull
  public final ImageView stepImage;

  @NonNull
  public final TextView stepTitle;

  private ActivityOnboardingBinding(@NonNull ConstraintLayout rootView, @NonNull Button backButton,
      @NonNull LinearLayout buttonContainer, @NonNull Button nextButton,
      @NonNull LinearLayout progressContainer, @NonNull LinearProgressIndicator progressIndicator,
      @NonNull Button skipButton, @NonNull TextView stepCounter, @NonNull TextView stepDescription,
      @NonNull ImageView stepImage, @NonNull TextView stepTitle) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.buttonContainer = buttonContainer;
    this.nextButton = nextButton;
    this.progressContainer = progressContainer;
    this.progressIndicator = progressIndicator;
    this.skipButton = skipButton;
    this.stepCounter = stepCounter;
    this.stepDescription = stepDescription;
    this.stepImage = stepImage;
    this.stepTitle = stepTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOnboardingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOnboardingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_onboarding, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOnboardingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.buttonContainer;
      LinearLayout buttonContainer = ViewBindings.findChildViewById(rootView, id);
      if (buttonContainer == null) {
        break missingId;
      }

      id = R.id.nextButton;
      Button nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.progressContainer;
      LinearLayout progressContainer = ViewBindings.findChildViewById(rootView, id);
      if (progressContainer == null) {
        break missingId;
      }

      id = R.id.progressIndicator;
      LinearProgressIndicator progressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (progressIndicator == null) {
        break missingId;
      }

      id = R.id.skipButton;
      Button skipButton = ViewBindings.findChildViewById(rootView, id);
      if (skipButton == null) {
        break missingId;
      }

      id = R.id.stepCounter;
      TextView stepCounter = ViewBindings.findChildViewById(rootView, id);
      if (stepCounter == null) {
        break missingId;
      }

      id = R.id.stepDescription;
      TextView stepDescription = ViewBindings.findChildViewById(rootView, id);
      if (stepDescription == null) {
        break missingId;
      }

      id = R.id.stepImage;
      ImageView stepImage = ViewBindings.findChildViewById(rootView, id);
      if (stepImage == null) {
        break missingId;
      }

      id = R.id.stepTitle;
      TextView stepTitle = ViewBindings.findChildViewById(rootView, id);
      if (stepTitle == null) {
        break missingId;
      }

      return new ActivityOnboardingBinding((ConstraintLayout) rootView, backButton, buttonContainer,
          nextButton, progressContainer, progressIndicator, skipButton, stepCounter,
          stepDescription, stepImage, stepTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
