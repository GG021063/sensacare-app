// Generated by view binder compiler. Do not edit!
package com.sensacare.veepoo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.sensacare.veepoo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout authModeToggle;

  @NonNull
  public final TextInputLayout emailInputLayout;

  @NonNull
  public final MaterialButton getStartedButton;

  @NonNull
  public final MaterialButton loginButton;

  @NonNull
  public final ImageView logoImage;

  @NonNull
  public final TextView offlineQueueStatus;

  @NonNull
  public final TextInputEditText otpInput;

  @NonNull
  public final TextInputLayout otpInputLayout;

  @NonNull
  public final TextView otpInstructions;

  @NonNull
  public final TextView otpModeButton;

  @NonNull
  public final LinearLayout otpModeContainer;

  @NonNull
  public final TextInputEditText passwordInput;

  @NonNull
  public final TextInputLayout passwordInputLayout;

  @NonNull
  public final TextView passwordModeButton;

  @NonNull
  public final LinearLayout passwordModeContainer;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final MaterialButton sendMagicLinkButton;

  @NonNull
  public final MaterialButton signUpButton;

  @NonNull
  public final TextInputEditText usernameInput;

  @NonNull
  public final MaterialButton verifyOtpButton;

  @NonNull
  public final TextView welcomeHeading;

  @NonNull
  public final TextView welcomeTagline;

  private ActivityLoginBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout authModeToggle,
      @NonNull TextInputLayout emailInputLayout, @NonNull MaterialButton getStartedButton,
      @NonNull MaterialButton loginButton, @NonNull ImageView logoImage,
      @NonNull TextView offlineQueueStatus, @NonNull TextInputEditText otpInput,
      @NonNull TextInputLayout otpInputLayout, @NonNull TextView otpInstructions,
      @NonNull TextView otpModeButton, @NonNull LinearLayout otpModeContainer,
      @NonNull TextInputEditText passwordInput, @NonNull TextInputLayout passwordInputLayout,
      @NonNull TextView passwordModeButton, @NonNull LinearLayout passwordModeContainer,
      @NonNull ProgressBar progressBar, @NonNull MaterialButton sendMagicLinkButton,
      @NonNull MaterialButton signUpButton, @NonNull TextInputEditText usernameInput,
      @NonNull MaterialButton verifyOtpButton, @NonNull TextView welcomeHeading,
      @NonNull TextView welcomeTagline) {
    this.rootView = rootView;
    this.authModeToggle = authModeToggle;
    this.emailInputLayout = emailInputLayout;
    this.getStartedButton = getStartedButton;
    this.loginButton = loginButton;
    this.logoImage = logoImage;
    this.offlineQueueStatus = offlineQueueStatus;
    this.otpInput = otpInput;
    this.otpInputLayout = otpInputLayout;
    this.otpInstructions = otpInstructions;
    this.otpModeButton = otpModeButton;
    this.otpModeContainer = otpModeContainer;
    this.passwordInput = passwordInput;
    this.passwordInputLayout = passwordInputLayout;
    this.passwordModeButton = passwordModeButton;
    this.passwordModeContainer = passwordModeContainer;
    this.progressBar = progressBar;
    this.sendMagicLinkButton = sendMagicLinkButton;
    this.signUpButton = signUpButton;
    this.usernameInput = usernameInput;
    this.verifyOtpButton = verifyOtpButton;
    this.welcomeHeading = welcomeHeading;
    this.welcomeTagline = welcomeTagline;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.authModeToggle;
      LinearLayout authModeToggle = ViewBindings.findChildViewById(rootView, id);
      if (authModeToggle == null) {
        break missingId;
      }

      id = R.id.emailInputLayout;
      TextInputLayout emailInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailInputLayout == null) {
        break missingId;
      }

      id = R.id.getStartedButton;
      MaterialButton getStartedButton = ViewBindings.findChildViewById(rootView, id);
      if (getStartedButton == null) {
        break missingId;
      }

      id = R.id.loginButton;
      MaterialButton loginButton = ViewBindings.findChildViewById(rootView, id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.logoImage;
      ImageView logoImage = ViewBindings.findChildViewById(rootView, id);
      if (logoImage == null) {
        break missingId;
      }

      id = R.id.offlineQueueStatus;
      TextView offlineQueueStatus = ViewBindings.findChildViewById(rootView, id);
      if (offlineQueueStatus == null) {
        break missingId;
      }

      id = R.id.otpInput;
      TextInputEditText otpInput = ViewBindings.findChildViewById(rootView, id);
      if (otpInput == null) {
        break missingId;
      }

      id = R.id.otpInputLayout;
      TextInputLayout otpInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (otpInputLayout == null) {
        break missingId;
      }

      id = R.id.otpInstructions;
      TextView otpInstructions = ViewBindings.findChildViewById(rootView, id);
      if (otpInstructions == null) {
        break missingId;
      }

      id = R.id.otpModeButton;
      TextView otpModeButton = ViewBindings.findChildViewById(rootView, id);
      if (otpModeButton == null) {
        break missingId;
      }

      id = R.id.otpModeContainer;
      LinearLayout otpModeContainer = ViewBindings.findChildViewById(rootView, id);
      if (otpModeContainer == null) {
        break missingId;
      }

      id = R.id.passwordInput;
      TextInputEditText passwordInput = ViewBindings.findChildViewById(rootView, id);
      if (passwordInput == null) {
        break missingId;
      }

      id = R.id.passwordInputLayout;
      TextInputLayout passwordInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (passwordInputLayout == null) {
        break missingId;
      }

      id = R.id.passwordModeButton;
      TextView passwordModeButton = ViewBindings.findChildViewById(rootView, id);
      if (passwordModeButton == null) {
        break missingId;
      }

      id = R.id.passwordModeContainer;
      LinearLayout passwordModeContainer = ViewBindings.findChildViewById(rootView, id);
      if (passwordModeContainer == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.sendMagicLinkButton;
      MaterialButton sendMagicLinkButton = ViewBindings.findChildViewById(rootView, id);
      if (sendMagicLinkButton == null) {
        break missingId;
      }

      id = R.id.signUpButton;
      MaterialButton signUpButton = ViewBindings.findChildViewById(rootView, id);
      if (signUpButton == null) {
        break missingId;
      }

      id = R.id.usernameInput;
      TextInputEditText usernameInput = ViewBindings.findChildViewById(rootView, id);
      if (usernameInput == null) {
        break missingId;
      }

      id = R.id.verifyOtpButton;
      MaterialButton verifyOtpButton = ViewBindings.findChildViewById(rootView, id);
      if (verifyOtpButton == null) {
        break missingId;
      }

      id = R.id.welcomeHeading;
      TextView welcomeHeading = ViewBindings.findChildViewById(rootView, id);
      if (welcomeHeading == null) {
        break missingId;
      }

      id = R.id.welcomeTagline;
      TextView welcomeTagline = ViewBindings.findChildViewById(rootView, id);
      if (welcomeTagline == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView, authModeToggle, emailInputLayout,
          getStartedButton, loginButton, logoImage, offlineQueueStatus, otpInput, otpInputLayout,
          otpInstructions, otpModeButton, otpModeContainer, passwordInput, passwordInputLayout,
          passwordModeButton, passwordModeContainer, progressBar, sendMagicLinkButton, signUpButton,
          usernameInput, verifyOtpButton, welcomeHeading, welcomeTagline);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
